using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'repeatedString' function below.
     *
     * The function is expected to return a LONG_INTEGER.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. LONG_INTEGER n
     */

    public static long repeatedString(string s, long n)
    {
        long count = 0;
        
          
            long l = 0;
            int extra = 0;
            try
            {
                for (long i = 0; i < s.Length; i++)
                {
                    if (s[Convert.ToInt32(i)] == 'a')
                    {
                        count++;
                        
                    }
                }
                l = n / s.Length;
                long strl = n - (s.Length * l);
                for(int j = 0; j < strl; j++)
                {
                    if (s[j] == 'a')
                    {
                        extra++;
                    }
                }

                count = count * l+extra;
            }
            catch(Exception )
             {
            
              }
            
              return count;

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string s = Console.ReadLine();

        long n = Convert.ToInt64(Console.ReadLine().Trim());

        long result = Result.repeatedString(s, n);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
